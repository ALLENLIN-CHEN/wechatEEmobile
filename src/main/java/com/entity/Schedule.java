package com.entity;

// Generated 2016-4-16 15:43:05 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import java.text.SimpleDateFormat;

/**
 * Schedule generated by hbm2java
 */
@Entity
@Table(name = "schedule", catalog = "projectdatabase")
public class Schedule implements java.io.Serializable {

    private Integer scheduleId;
    private Subproject subproject;
    private User user;
    private String taskContent;
    private String taskReply;
    private Character taskType;
    private Character taskStatus;
    private Date taskTime;
    private Date taskStartTime;
    private Set<ScheduleMember> scheduleMembers = new HashSet<ScheduleMember>(0);

    public Schedule() {
    }

    public Schedule(Subproject subproject, User user, String taskContent,
                    Character taskType, Character taskStatus, Date taskTime,
                    Date taskStartTime, Set<ScheduleMember> scheduleMembers,String taskReply) {
        this.subproject = subproject;
        this.user = user;
        this.taskContent = taskContent;
        this.taskType = taskType;
        this.taskStatus = taskStatus;
        this.taskTime = taskTime;
        this.taskStartTime = taskStartTime;
        this.scheduleMembers = scheduleMembers;
        this.taskReply = taskReply;
    }


    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "scheduleId", unique = true, nullable = false)
    public Integer getScheduleId() {
        return this.scheduleId;
    }

    public void setScheduleId(Integer scheduleId) {
        this.scheduleId = scheduleId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "subprojectId")
    public Subproject getSubproject() {
        return this.subproject;
    }

    public void setSubproject(Subproject subproject) {
        this.subproject = subproject;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "openId")
    public User getUser() {
        return this.user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    @Column(name = "task_content", length = 200)
    public String getTaskContent() {
        return this.taskContent;
    }

    public void setTaskContent(String taskContent) {
        this.taskContent = taskContent;
    }

    @Column(name = "task_type", length = 1)
    public Character getTaskType() {
        return this.taskType;
    }

    public void setTaskType(Character taskType) {
        this.taskType = taskType;
    }

    @Column(name = "task_reply", length = 1)
    public String getTaskReply() {
        return this.taskReply;
    }
    public void setTaskReply(String all){
        this.taskReply = all;
    }
    public void appendTaskReply(String name, String reply,Date replyTime){
        SimpleDateFormat df = new SimpleDateFormat("yy.MM.dd HH时mm分");
        if(this.taskReply == null)
            this.taskReply = "";
        this.taskReply+=(name+": "+reply+" "+df.format(replyTime)+"<br/>");
    }
    @Column(name = "task_status", length = 1)
    public Character getTaskStatus() {
        return this.taskStatus;
    }

    public void setTaskStatus(Character taskStatus) {
        this.taskStatus = taskStatus;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "task_time", length = 10)
    public Date getTaskTime() {
        return this.taskTime;
    }

    public void setTaskTime(Date taskTime) {
        this.taskTime = taskTime;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "task_start_time", length = 10)
    public Date getTaskStartTime() {
        return this.taskStartTime;
    }

    public void setTaskStartTime(Date taskStartTime) {
        this.taskStartTime = taskStartTime;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "schedule")
    public Set<ScheduleMember> getScheduleMembers() {
        return this.scheduleMembers;
    }

    public void setScheduleMembers(Set<ScheduleMember> scheduleMembers) {
        this.scheduleMembers = scheduleMembers;
    }

}
